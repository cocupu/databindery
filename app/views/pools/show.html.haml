-content_for :head do
  :javascript
    function Model(data) {
        this.name = ko.observable(data.name);
        this.labelField = data.label;
        this.id = data.id;
        this.relativeUrl = "#" + data.id;
        this.pool = data.pool;
        this.identity = data.identity;
        this.fields = ko.observableArray([]);
        this.fields( $.map(data.fields, function(item) { return new ModelField(item) }) ); 
        
    }
    function ModelField(data) {
      this.code = data.code;
      this.name = data.name;
    }
    function Entity(data) {
        this.associations = data.associations;
        this.title = data.title;
        this.values = data.data;
    }

    function PoolExplorerViewModel() {
        // Data
        var self = this;
        self.models = ko.observableArray([]);
        self.results = ko.observableArray([]);
        self.selectedModel = ko.observable();
        
        self.viewModes = ko.observableArray(['Explore', 'Grid Edit']);
        self.currentViewMode = ko.observable( self.viewModes()[0] );
        
        // Load initial state from server, convert it to Model instances, then populate self.models
        $.getJSON("#{params["id"]}/models", function(allData) {
            var mappedModels = $.map(allData, function(item) { return new Model(item) });
            self.models(mappedModels);
        });
        
        // Behaviours    
        self.openModelSearchPane = function(model) {
          $.getJSON("#{params["id"]}/models/"+model.id+"/nodes/search", function(allData) {
              var mappedResults = $.map(allData, function(item) { return new Entity(item) });
              self.results(mappedResults);
              self.selectedModel(model);
          });
        };
        
        self.setViewMode = function(newMode) {
          self.currentViewMode(newMode);
        }
    };
    
%nav#menu-nav
  %ul#menu-nav-tabs.nav.nav-tabs
    %li.active 
      %a{href:"#models"} Entities
    %li 
      %a{href:"#data-sources"} Data Sources
  #menu-tab-content.tab-content
    =# render :file => "models/index_compact"
    %ul#models.tab-pane.active.models.nav.nav-pills.nav-stacked{"data-bind" => "foreach: models"}
      %li.model
        %a{"data-bind" => "text: name, click: $root.openModelSearchPane, attr: {href: relativeUrl}"}
    
#panels  
  = render file: "nodes/search"
  

  

%script
  ko.applyBindings(new PoolExplorerViewModel());


