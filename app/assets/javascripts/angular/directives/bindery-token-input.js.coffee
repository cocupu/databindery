angular.module("binderyCurate").directive('binderyTokenInput', ['$compile',($compile) ->
  return {
    require : '?ngModel',
    restrict: 'A',
    link: (scope, element, attrs, ngModel) ->
      opts = scope.$eval(attrs.binderyTokenInput)
      # Call initSelection function so it can prepopulate the array of selections
      opts.initSelection(scope, element, (val) ->
        element.tokenInput("add", val)
      )

      opts.onReady= () ->
        # Add ng-focus directive to the input field that was generated by tokeninput, then compile the element and add to scope
        inputtoken = element.parent().find(".token-input-input-token-facebook input").attr("ng-focus", "focusOnField(fieldConfig)")
        $compile(inputtoken)(scope)

      opts.onAdd = (item) ->
        addedToken = $(".selected-token."+item.persistent_id)
        $compile(addedToken)(scope)

      lookupUrl = scope.$eval(attrs.url)
      element.tokenInput(lookupUrl, opts);
      element.bind('change', () ->
        scope.$apply( () ->
          ngModel.$setViewValue(element.val().split(","))
        )
      )
  }
])
